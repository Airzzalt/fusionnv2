<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Staff Applications - Admin</title>
    <link rel="icon" type="icon/x-icon" href="img/logo.webp" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.6.0/css/all.min.css" />
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;600;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@20..48,100..700,0..1,-50..200" />
    <style>
        :root {
            --primary: #a78bfa;
            --secondary: #4ade80;
            --background: #111827;
            --surface: #1f2937;
            --text: #e5e7eb;
            --text-secondary: #9ca3af;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Poppins', sans-serif;
            background: url('bg.webp') no-repeat center center fixed;
            background-size: cover;
            color: var(--text);
            line-height: 1.6;
            overflow-x: hidden;
        }

        .container {
            width: 90%;
            max-width: 1200px;
            margin: 0 auto;
            padding: 2rem 20px;
        }

        header {
            background-color: rgba(31, 41, 55, 0.8);
            backdrop-filter: blur(10px);
            border-radius: 1rem;
            margin-bottom: 2rem;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }

        nav {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 1rem 2rem;
        }

        .logo {
            font-size: 1.5rem;
            font-weight: 700;
            color: var(--primary);
            text-decoration: none;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .logo img {
            width: 30px;
            height: 30px;
        }

        .nav-links {
            display: flex;
            gap: 1.5rem;
        }

        .nav-links a {
            color: var(--text);
            text-decoration: none;
            font-weight: 600;
            font-size: 0.9rem;
            text-transform: uppercase;
            letter-spacing: 0.05em;
            transition: color 0.3s ease, background-color 0.3s ease;
            padding: 0.5rem 1rem;
            border-radius: 0.5rem;
        }

        .nav-links a:hover, .nav-links a.active {
            color: var(--primary);
            background-color: rgba(167, 139, 250, 0.1);
        }

        main {
            background-color: rgba(31, 41, 55, 0.8);
            backdrop-filter: blur(10px);
            border-radius: 1rem;
            padding: 2rem;
            margin-bottom: 3rem;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }

        h1 {
            text-align: center;
            margin-bottom: 2rem;
            background: linear-gradient(to right, var(--primary), var(--secondary));
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            font-size: 2.5rem;
        }

        .application-container {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 1.5rem;
        }

        .application-box {
            background-color: var(--surface);
            border-radius: 0.5rem;
            padding: 1.5rem;
            position: relative;
            transition: all 0.3s ease;
        }

        .application-box:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 15px rgba(0, 0, 0, 0.1);
        }

        .application-box h3 {
            margin-bottom: 1rem;
            color: var(--primary);
        }

        .application-box p {
            margin-bottom: 0.5rem;
            color: var(--text-secondary);
        }

        .application-box strong {
            color: var(--text);
        }

        .mark-read-btn {
            background-color: var(--primary);
            color: var(--background);
            border: none;
            padding: 0.5rem 1rem;
            border-radius: 0.25rem;
            cursor: pointer;
            transition: background-color 0.3s ease;
            font-weight: 600;
        }

        .mark-read-btn:hover {
            background-color: var(--secondary);
        }

        .read {
            opacity: 0.6;
        }

        .approval-icons {
            position: absolute;
            top: 1rem;
            right: 1rem;
            display: flex;
            gap: 0.5rem;
        }

        .approval-icons i {
            font-size: 1.2rem;
            cursor: pointer;
            transition: transform 0.3s ease;
        }

        .approval-icons i:hover {
            transform: scale(1.2);
        }

        .approved {
            border: 2px solid var(--secondary);
        }

        .rejected {
            border: 2px solid #ef4444;
        }

        .modal {
            display: none;
            position: fixed;
            z-index: 1000;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.5);
            backdrop-filter: blur(5px);
        }

        .modal-content {
            background-color: var(--surface);
            margin: 10% auto;
            padding: 2rem;
            border-radius: 1rem;
            width: 90%;
            max-width: 600px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            position: relative;
        }

        .close-modal {
            position: absolute;
            right: 1rem;
            top: 1rem;
            font-size: 1.5rem;
            color: var(--text-secondary);
            cursor: pointer;
            transition: color 0.3s ease;
        }

        .close-modal:hover {
            color: var(--text);
        }

        @media (max-width: 768px) {
            .container {
                width: 95%;
            }

            nav {
                flex-direction: column;
                align-items: flex-start;
            }

            .nav-links {
                margin-top: 1rem;
                flex-direction: column;
                width: 100%;
            }

            .nav-links a {
                width: 100%;
                text-align: center;
            }
        }
        
.burger {
    display: none;
    background: none;
    border: none;
    color: var(--text);
    font-size: 1.5rem;
    cursor: pointer;
}


@media (max-width: 768px) {
    .nav-links {
        display: none;
        flex-direction: column;
        position: fixed;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background-color: rgba(31, 41, 55, 0.95);
        backdrop-filter: blur(10px);
        padding: 4rem 1rem 1rem;
        z-index: 1000;
    }

    .nav-links.show {
        display: flex;
    }

    .burger {
        display: block;
        position: relative;
        z-index: 1001;
    }
}

    </style>
</head>
<body>
    <div id="particles-js"></div>

    <div class="container">
        <header>
            <nav>
                <a href="/home" class="logo">
                    <img src="img/logo.webp" alt="Fusion Network Logo">
                    Fusion Network
                </a>
                <div class="nav-links">
                    <a href="/home">Home</a>
                    <a href="/forums">Forums</a>
                    <a href="/apply-staff">Staff Apply</a>
                    <a href="/notices">Notices</a>
                    <a href="/profilepage" class="active">
                        <img src="https://mc-heads.net/avatar/steve/24" alt="Steve Head" style="width: 24px; height: 24px; border-radius: 4px; vertical-align: middle; margin-right: 5px;">
                        Profile
                    </a>
                </div>
                <button class="burger" id="burger" aria-label="Toggle menu">â˜°</button>
            </nav>
        </header>

        <main>
            <h1>Staff Applications</h1>

            <div class="application-container">
                <% applications.forEach(app => { %>
                    <div class="application-box <%= app.read ? 'read' : '' %> <%= app.status === 'approved' ? 'approved' : app.status === 'rejected' ? 'rejected' : '' %>" id="appBox-<%= app.id %>">
                        <div class="approval-icons">
                            <i class="fa-solid fa-check" onclick="markApproved('<%= app.id %>')" style="color: var(--secondary);"></i>
                            <i class="fa-solid fa-times" onclick="markRejected('<%= app.id %>')" style="color: #ef4444;"></i>
                        </div>
                        
                        <h3><%= app.username %></h3>
                        <p><strong>In-Game Name:</strong> <%= app.inGameName %></p>
                        <button class="mark-read-btn" onclick="showApplication('<%= app.id %>')">View Application</button>
                    </div>
                <% }); %>
            </div>
        </main>
    </div>
    
    <div class="modal" id="applicationModal">
        <div class="modal-content">
            <span class="close-modal" onclick="closeModal()">&times;</span>
            <div id="applicationDetails"></div>
        </div>
    </div>

    <script>
        function showApplication(id) {
            fetch(`/view-application/${id}`)
                .then(response => response.json())
                .then(data => {
                    const details = `
                        <h3>${data.username}'s Application</h3>
                        <p><strong>In-Game Name:</strong> ${data.inGameName}</p>
                        <p><strong>Why they want to become staff:</strong> ${data.why}</p>
                        <p><strong>Scenario Response:</strong> ${data.scenario}</p>
                        <p><strong>Availability:</strong> ${data.availability}</p>
                        <p><strong>Past Experience:</strong> ${data.experience}</p>
                    `;
                    document.getElementById('applicationDetails').innerHTML = details;
                    document.getElementById('applicationModal').style.display = 'flex';
                });
        }

        function closeModal() {
            document.getElementById('applicationModal').style.display = 'none';
        }

        function markApproved(id) {
    const box = document.getElementById(`appBox-${id}`);
    box.classList.add('approved');
    box.classList.remove('rejected');

    fetch(`/applications/${id}/status`, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ status: 'approved' })
    });
}

function markRejected(id) {
    const box = document.getElementById(`appBox-${id}`);
    box.classList.add('rejected');
    box.classList.remove('approved');

    fetch(`/applications/${id}/status`, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ status: 'rejected' })
    });
}

        const burger = document.getElementById('burger');
        const navLinks = document.getElementById('navLinks');
        const mainContent = document.querySelector('main');

        burger.addEventListener('click', () => {
            navLinks.classList.toggle('show');
            document.body.classList.toggle('menu-open');
            burger.textContent = navLinks.classList.contains('show') ? 'âœ•' : 'â˜°';
            
            if (navLinks.classList.contains('show')) {
                setTimeout(() => {
                    mainContent.style.visibility = 'hidden';
                }, 300);
            } else {
                mainContent.style.visibility = 'visible';
            }
        });

        // Smooth scrolling for navigation links
        document.querySelectorAll('a[href^="#"]').forEach(anchor => {
            anchor.addEventListener('click', function (e) {
                e.preventDefault();
                document.querySelector(this.getAttribute('href')).scrollIntoView({
                    behavior: 'smooth'
                });
            });
        });
</script>
</body>
</html>